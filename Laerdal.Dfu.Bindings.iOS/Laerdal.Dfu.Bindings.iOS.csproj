<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <Laerdal_Package_Name>Laerdal.Dfu.Bindings.iOS</Laerdal_Package_Name>
        <Laerdal_Package_Tags>Ble;Tools;Xamarin;Dfu;Bluetooth;Nordic;Semiconductor</Laerdal_Package_Tags>
        <Laerdal_Package_Copyright>Laerdal Medical, Francois Raminosona</Laerdal_Package_Copyright>
        <Laerdal_Package_Description>Xamarin wrapper around Nordic.Dfu for iOS.</Laerdal_Package_Description>

        <!-- <BuildWithMSBuildOnMono>false</BuildWithMSBuildOnMono> -->
    </PropertyGroup>

    <PropertyGroup>
        <IsBindingProject>true</IsBindingProject>
        
        <TargetFrameworks>$(TargetFrameworks)net8.0-ios;</TargetFrameworks>
        <TargetFrameworks>$(TargetFrameworks)net8.0-maccatalyst</TargetFrameworks>

        <IsOSX Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true' ">true</IsOSX>

        <IsNet8IOS Condition="           $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'         ">true</IsNet8IOS>
        <IsNet8MacCatalyst Condition="   $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst' ">true</IsNet8MacCatalyst>
    </PropertyGroup>

    <PropertyGroup>
        <DebugType>full</DebugType>
        <Optimized>false</Optimized>
        <MtouchExtraArgs>-v -v -v -v</MtouchExtraArgs>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <NoBindingEmbedding>true</NoBindingEmbedding>
        <MtouchNoSymbolStrip>true</MtouchNoSymbolStrip>

        <DefaultItemExcludes>$(DefaultItemExcludes);Carthage\**</DefaultItemExcludes>

        <!-- 1. under net8 we need Optimized=false otherwise release builds cause the resulting apps to crash right upon getting launched in the iphone! -->
        <!-- 2. NoBindingEmbedding=true per https://github.com/Laerdal/Laerdal.Dfu/issues/29#issuecomment-1904057544 -->
    </PropertyGroup>

    <!-- ==================== VERSION ==================== -->
    <PropertyGroup>
        <!-- when updating this version it is imperative to also update it manually inside laerdal.builder.targets too -->
        <!-- failing to do so will cause the release mechanism to fail in terms of creating a new release on github    -->
        <Nordic_Package_Version Condition=" '$(Nordic_Package_Version)' == '' ">4.15.3</Nordic_Package_Version>
        <Laerdal_Revision Condition="       '$(Laerdal_Revision)'       == '' ">0</Laerdal_Revision>

        <Laerdal_Version_Full Condition=" '$(Laerdal_Version_Full)' == '' ">$(Nordic_Package_Version).$(Laerdal_Revision)</Laerdal_Version_Full>
    </PropertyGroup>

    <!-- ==================== TARGET PLATFORM VERSION ======================= -->
    <PropertyGroup>
        <!-- you will need to be specific when it comes to workloads ->    dotnet workload install maui -/-version 8.0.402   -->

        <!-- #1 these properties must be kept in sync between this file and laerdal.mcumgr.bindings.[android|ios|maccatalyst].csproj   -->
        <!-- #2 even though this is library is pure csharp we still have to specify the target-plaform-version for each target because -->
        <!--    if we dont dont the build system throws a tantrum from oct 2024 onwards                                                -->
        <TargetPlatformVersion Condition="       '$(IsNet8IOS)'         == 'true' ">17.0</TargetPlatformVersion>
        <SupportedOSPlatformVersion  Condition=" '$(IsNet8IOS)'         == 'true' ">11.0</SupportedOSPlatformVersion>

        <TargetPlatformVersion Condition="       '$(IsNet8MacCatalyst)' == 'true' ">17.0</TargetPlatformVersion>
        <SupportedOSPlatformVersion  Condition=" '$(IsNet8MacCatalyst)' == 'true' ">13.1</SupportedOSPlatformVersion>
    </PropertyGroup>

    <Import Project="Laerdal.targets"/>

    <ItemGroup>
        <!-- unfortunately the files autogenerated by sharpie need a lot of hand tweaking to -->
        <!-- be really aligned with the underlying native libs so we cannot use them as-is   -->
        <None Include="Sharpie\**\*.cs"/>
        <Compile Remove="Sharpie\**\*.cs"/>

        <ObjcBindingCoreSource Include="StructsAndEnums.cs"/>
        <ObjcBindingApiDefinition Include="ApiDefinition.cs"/>
    </ItemGroup>

    <ItemGroup>
        <NativeReference Include="Carthage/Carthage/Build/NordicDFU.xcframework/ios-arm64/NordicDFU.framework">
            <Kind>Framework</Kind>
            <SmartLink>False</SmartLink>
            <Frameworks>Foundation</Frameworks>
        </NativeReference>
    </ItemGroup>

    <Target Condition=" '$(DesignTimeBuild)' != 'true' and '$(BuildingProject)' == 'true' and !Exists('Carthage\Carthage\Checkouts\IOS-Pods-DFU-Library\Package.swift') "
            Name="_DownloadAndBuildIosNativeLibraries"
            BeforeTargets="PrepareForBuild">

        <Error Condition=" '$(IsOSX)' != 'true'                   " Text="This project can only be built on MacOS because it relies on the Carthage family of cli utils."/>
        <Error Condition=" '$(Laerdal_Github_Access_Token)' == '' " Text="'Laerdal_Github_Access_Token' is not defined. Please define it in your environment variables otherwise Carthage will fail most of the times."/>

        <Message Importance="High" Text="** Downloading Carthage iOS packages ..."/>

        <WriteLinesToFile
                File="Carthage\Cartfile"
                Lines="github    &quot;NordicSemiconductor/IOS-Pods-DFU-Library&quot;    &quot;$(Nordic_Package_Version)&quot;"
                Overwrite="true"/>

        <PropertyGroup>
            <_CarthageBuildCommand>$(_CarthageBuildCommand) GITHUB_ACCESS_TOKEN=&quot;github.com=$(Laerdal_Github_Access_Token)&quot;</_CarthageBuildCommand>
            <_CarthageBuildCommand>$(_CarthageBuildCommand) carthage update</_CarthageBuildCommand>
            <_CarthageBuildCommand>$(_CarthageBuildCommand) --platform iOS</_CarthageBuildCommand>
            <_CarthageBuildCommand>$(_CarthageBuildCommand) --no-use-binaries</_CarthageBuildCommand>
            <_CarthageBuildCommand>$(_CarthageBuildCommand) --use-xcframeworks</_CarthageBuildCommand>
            <_CarthageBuildCommand>$(_CarthageBuildCommand) --project-directory Carthage</_CarthageBuildCommand>
        </PropertyGroup>

        <!-- noticed that we had to resort to no-use-bindaries because we would constantly -->
        <!-- into ratelimiting problems without it causing our github pipelines to fail    -->
        <Exec WorkingDirectory="$(MSBuildThisFileDirectory)" Command=" $(_CarthageBuildCommand) "/>

        <RemoveDir
                Condition="Exists('Carthage\Carthage\Checkouts\IOS-Pods-DFU-Library\Example')"
                Directories="Carthage\Carthage\Checkouts\IOS-Pods-DFU-Library\Example"/>

        <!-- use this whenever you need to refresh apidefinition.cs and structsandenums.cs   -->
        <!--                                                                                 -->
        <!-- unfortunately the files autogenerated by sharpie need a lot of hand tweaking to -->
        <!-- be really aligned with the underlying native libs so we cannot use them as-is   -->
        <!--                                                                                 -->
        <!--        <Message Importance="High" Text="** Regenerating sharpie files ..."/>    -->
        <!--        <Exec Command="sharpie bind -o Sharpie &#45;&#45;namespace=Laerdal.Dfu.Bindings.iOS -f Carthage/Carthage/Build/NordicDFU.xcframework/ios-arm64/NordicDFU.framework"/>-->
    </Target>

    <!--    use this whenever you need to refresh apidefinition.cs and structsandenums.cs                                                                                             -->
    <!--                                                                                                                                                                              -->
    <!--             Condition=" Exists('Carthage\Carthage\Build\NordicDFU.xcframework') and !Exists('Sharpie\') and '$(ContinuousIntegrationBuild)' != 'true' "                      -->
    <!--                                                                                                                                                                              -->
    <!--    <Target Name="_RunObjectiveSharpie"-->
    <!--            BeforeTargets="PrepareForBuild"-->
    <!--            DependsOnTargets="_DownloadAndBuildIosNativeLibraries">-->
    <!--        <Message Importance="High" Text="** Regenerating sharpie files ..."/>-->
    <!--                                                                                                                                                                              -->
    <!--        <Exec Command="sharpie bind -o Sharpie &#45;&#45;namespace=Laerdal.Dfu.Bindings.iOS -f Carthage/Carthage/Build/NordicDFU.xcframework/ios-arm64/NordicDFU.framework"/> -->
    <!--    </Target>-->
</Project>
