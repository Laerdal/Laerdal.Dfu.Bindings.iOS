<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <Laerdal_Package_Name>Laerdal.Dfu.Bindings.iOS</Laerdal_Package_Name>
        <Laerdal_Package_Tags>Ble;Tools;Xamarin;Dfu;Bluetooth;Nordic;Semiconductor</Laerdal_Package_Tags>
        <Laerdal_Package_Copyright>Laerdal Medical, Francois Raminosona</Laerdal_Package_Copyright>
        <Laerdal_Package_Description>Xamarin wrapper around Nordic.Dfu for iOS.</Laerdal_Package_Description>

        <!-- <BuildWithMSBuildOnMono>false</BuildWithMSBuildOnMono> -->
    </PropertyGroup>

    <PropertyGroup>
        <TargetFramework>net8.0-ios</TargetFramework>

        <MtouchExtraArgs>-v -v -v -v</MtouchExtraArgs>

        <IsBindingProject>true</IsBindingProject>

        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <MtouchNoSymbolStrip>true</MtouchNoSymbolStrip>

        <!-- https://github.com/Laerdal/Laerdal.Dfu/issues/29#issuecomment-1904057544 -->
        <NoBindingEmbedding>true</NoBindingEmbedding>

        <IsOSX Condition="      '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))'     == 'true' ">true</IsOSX>
    </PropertyGroup>

    <!-- ==================== VERSION ==================== -->
    <PropertyGroup>
        <!-- when updating this version it is imperative to also update it manually inside laerdal.builder.targets too -->
        <!-- failing to do so will cause the release mechanism to fail in terms of creating a new release on github    -->
        <Nordic_Package_Version Condition=" '$(Nordic_Package_Version)' == '' ">4.13.0</Nordic_Package_Version>
        <Laerdal_Revision Condition="       '$(Laerdal_Revision)'       == '' ">0</Laerdal_Revision>

        <Laerdal_Version Condition=" '$(Laerdal_Version)' == '' ">$(Nordic_Package_Version).$(Laerdal_Revision)</Laerdal_Version>
    </PropertyGroup>

    <Import Project="Laerdal.targets"/>

    <ItemGroup>
        <ObjcBindingCoreSource Include="StructsAndEnums.cs"/>
        <ObjcBindingApiDefinition Include="ApiDefinition.cs"/>

        <None Include="Sharpie/**/*.cs"/>
        <Compile Remove="Sharpie/**/*.cs"/>
    </ItemGroup>

    <Target Condition=" '$(DesignTimeBuild)' != 'true' and '$(BuildingProject)' == 'true' and !Exists('Carthage\Carthage\Build\iOSDFULibrary.xcframework\Package.swift') "
            Name="_DownloadIosNativeFiles"
            BeforeTargets="PrepareForBuild">

        <Error Condition=" '$(IsOSX)' != 'true'                   " Text="This project can only be built on MacOS because it relies on the Carthage family of cli utils." />
        <Error Condition=" '$(Laerdal_Github_Access_Token)' == '' " Text="'Laerdal_Github_Access_Token' is not defined. Please define it in your environment variables otherwise Carthage will fail most of the times." />

        <Message Importance="High" Text="** Downloading Carthage iOS packages ..."/>

        <WriteLinesToFile
                File="Carthage\Cartfile"
                Lines="github    &quot;NordicSemiconductor/IOS-Pods-DFU-Library&quot;    &quot;$(Nordic_Package_Version)&quot;"
                Overwrite="true"/>

        <!-- noticed that we had to resort to no-use-bindaries because we would constantly run into ratelimiting problems without it causing our github pipelines to fail -->
        <Exec WorkingDirectory="$(MSBuildThisFileDirectory)" Command="GITHUB_ACCESS_TOKEN=&quot;github.com=$(Laerdal_Github_Access_Token)&quot;   carthage update --project-directory Carthage --use-xcframeworks --platform iOS --no-use-binaries" />
        
        <RemoveDir
                Condition="Exists('Carthage\Carthage\Checkouts\IOS-Pods-DFU-Library\Example')"
                Directories="Carthage\Carthage\Checkouts\IOS-Pods-DFU-Library\Example"/>

    </Target>

    <!--    use this whenever you need to refresh apidefinition.cs and structsandenums.cs                                                                                                      -->
    <!--                                                                                                                                                                                       -->
    <!--    <Target Name="_RunObjectiveSharpie"                                                                                                                                                -->
    <!--            Condition=" Exists('Carthage\Carthage\Build\iOSDFULibrary.xcframework') and !Exists('Sharpie\') and '$(ContinuousIntegrationBuild)' != 'true' ">                           -->
    <!--        <Exec Command="sharpie bind -o Sharpie &#45;&#45;namespace=Laerdal.Dfu.Bindings.iOS -f Carthage/Carthage/Build/iOSDFULibrary.xcframework/ios-arm64/iOSDFULibrary.framework"/>  -->
    <!--    </Target>                                                                                                                                                                          -->

    <ItemGroup>
        <!-- Frameworks\iOSDFULibrary.framework -->
        <NativeReference Include="Carthage\Carthage\Build\iOSDFULibrary.xcframework">
            <Kind>Framework</Kind>
            <SmartLink>False</SmartLink>
            <Frameworks>Foundation</Frameworks>
        </NativeReference>

        <!-- Frameworks\ZIPFoundation.framework -->
        <NativeReference Include="Carthage\Carthage\Build\ZIPFoundation.xcframework">
            <Kind>Framework</Kind>
            <SmartLink>False</SmartLink>
            <Frameworks>Foundation</Frameworks>
        </NativeReference>
    </ItemGroup>
</Project>
